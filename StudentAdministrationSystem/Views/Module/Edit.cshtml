@model StudentAdministrationSystem.Models.ModuleModel

@{
   ViewBag.Title = "Edit";
   Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
   <head>
      <meta name = "viewport" content = "width = device-width" />
      <title>Edit</title>
   </head>
	
   <body>
      @using (Html.BeginForm()){
         @Html.AntiForgeryToken()
         <div class = "form-horizontal">
            <h4>Module</h4>
            <hr />
            @Html.ValidationSummary(
               true, "", new { @class = "text-danger" })
					
            @Html.HiddenFor(model => model.ModuleId)
				
            <div class = "form-group">
               @Html.LabelFor(
                  model => model.ModuleTitle, htmlAttributes: new{
                     @class = "control-label col-md-2" })
               <div class = "col-md-10">
                  @Html.EditorFor(model => model.ModuleTitle, new{
                     htmlAttributes = new {
                        @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.ModuleTitle, "", new{
                     @class = "text-danger" })
               </div>
            </div>
            
            <div class = "form-group">
                           @Html.LabelFor(
                              model => model.ModuleType, htmlAttributes: new{
                                 @class = "control-label col-md-2" })
                           <div class = "col-md-10">
                              @* @Html.EditorFor(model => model.ModuleType, new{ *@
                              @*    htmlAttributes = new { *@
                              @*       @class = "form-control" } }) *@
                                                @Html.DropDownListFor(m=>m.SelectedStatesId, Model.States,"Select one",new { @class = "form-control input-height", placeholder = "Enter Module Type" })

                              @Html.ValidationMessageFor(model => model.ModuleType, "", new{
                                    @class = "text-danger" })
                           </div>
                        </div>
				
            <div class = "form-group"> 
               @Html.LabelFor(
                  model => model.ProgrammeId, htmlAttributes: new{
                     @class = "control-label col-md-2" })
							
               <div class="col-md-10">
                  @Html.DropDownListFor(m=>m.ProgrammeId, (IEnumerable<SelectListItem>)ViewBag.programmes,"Select one",new { @class = "form-control input-height", placeholder = "Select Program" })
                  @Html.ValidationMessageFor(
                     model => model.ProgrammeId, "", new
                     {
                        @class = "text-danger"
                     })
               </div>
            </div>
            
            <div class = "form-group">
               <div class = "col-md-offset-2 col-md-10">
                  <input type = "submit" value = "Save" class = "btn btn-default"/>
               </div>
            </div>
				
         </div>
      }
		
      <div>
         @Html.ActionLink("Back to List", "Index")
      </div>
		
      <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.min.js" integrity="sha512-aVKKRRi/Q/YV+4mjoKBsE4x3H+BkegoM/em46NNlCqNTmUYADjBbeNefNxYV7giUp0VxICtqdrbqU7iVaeZNXA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
      @if (TempData["Message"] != null)
      {
         <script type="text/javascript">  
                  window.onload = function () {  
                      alert("@TempData["Message"]");  
                  };  
              </script>
      }
   </body>
</html>


